{"ast":null,"code":"var _jsxFileName = \"/Users/arieldavis/Development/code/lutrivia-react-atlanta-web-021720/lutrivia/src/components/TriviaContainer.js\";\nimport React from 'react';\nimport Trivia from './Trivia';\nimport SubmitForm from './SubmitForm';\n\nclass TriviaContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      score: 0\n    };\n\n    this.handleBtnClick = (event, question) => {\n      if (event.target.value === question.answer.toString()) {\n        event.target.style.backgroundColor = \"green\";\n        this.setState(prevState => ({\n          score: prevState.score + 1\n        }));\n      } else {\n        event.target.style.backgroundColor = \"red\";\n      }\n    };\n\n    this.renderQuestions = () => {\n      return this.props.data.map(question => React.createElement(Trivia, {\n        key: question.text,\n        questions: question,\n        handleBtnClick: event => this.handleBtnClick(event, question),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }));\n    };\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"Score: \", this.state.score), this.renderQuestions()), React.createElement(SubmitForm, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default TriviaContainer;","map":{"version":3,"sources":["/Users/arieldavis/Development/code/lutrivia-react-atlanta-web-021720/lutrivia/src/components/TriviaContainer.js"],"names":["React","Trivia","SubmitForm","TriviaContainer","Component","state","score","handleBtnClick","event","question","target","value","answer","toString","style","backgroundColor","setState","prevState","renderQuestions","props","data","map","text","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,MAAMC,eAAN,SAA8BH,KAAK,CAACI,SAApC,CAA8C;AAAA;AAAA;AAAA,SAC1CC,KAD0C,GAClC;AACJC,MAAAA,KAAK,EAAE;AADH,KADkC;;AAAA,SAO1CC,cAP0C,GAOzB,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAClC,UAAID,KAAK,CAACE,MAAN,CAAaC,KAAb,KAAuBF,QAAQ,CAACG,MAAT,CAAgBC,QAAhB,EAA3B,EAAuD;AACnDL,QAAAA,KAAK,CAACE,MAAN,CAAaI,KAAb,CAAmBC,eAAnB,GAAqC,OAArC;AACA,aAAKC,QAAL,CAAcC,SAAS,KAAK;AACxBX,UAAAA,KAAK,EAAEW,SAAS,CAACX,KAAV,GAAkB;AADD,SAAL,CAAvB;AAGH,OALD,MAKM;AACFE,QAAAA,KAAK,CAACE,MAAN,CAAaI,KAAb,CAAmBC,eAAnB,GAAqC,KAArC;AACH;AACJ,KAhByC;;AAAA,SAkB1CG,eAlB0C,GAkBxB,MAAM;AACpB,aAAO,KAAKC,KAAL,CAAWC,IAAX,CAAgBC,GAAhB,CAAoBZ,QAAQ,IAC/B,oBAAC,MAAD;AAAQ,QAAA,GAAG,EAAEA,QAAQ,CAACa,IAAtB;AAA4B,QAAA,SAAS,EAAEb,QAAvC;AAAiD,QAAA,cAAc,EAAGD,KAAD,IAAW,KAAKD,cAAL,CAAoBC,KAApB,EAA2BC,QAA3B,CAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADG,CAAP;AAGH,KAtByC;AAAA;;AAuB1Cc,EAAAA,MAAM,GAAG;AACL,WACI,0CACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAY,KAAKlB,KAAL,CAAWC,KAAvB,CADJ,EAEK,KAAKY,eAAL,EAFL,CADA,EAKA,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALA,CADJ;AASH;;AAjCyC;;AAoC9C,eAAef,eAAf","sourcesContent":["import React from 'react';\nimport Trivia from './Trivia';\nimport SubmitForm from './SubmitForm';\n\nclass TriviaContainer extends React.Component {\n    state = {  \n        score: 0,\n    }\n\n\n\n    handleBtnClick = (event, question) => {\n        if (event.target.value === question.answer.toString()) {\n            event.target.style.backgroundColor = \"green\"\n            this.setState(prevState => ({\n                score: prevState.score + 1,\n            }))\n        }else {\n            event.target.style.backgroundColor = \"red\"\n        }\n    }\n\n    renderQuestions = () => {\n        return this.props.data.map(question => \n            <Trivia key={question.text} questions={question} handleBtnClick={(event) => this.handleBtnClick(event, question)}/>\n        )\n    }\n    render() { \n        return (  \n            <>\n            <div>\n                <h2>Score: {this.state.score}</h2>\n                {this.renderQuestions()}\n            </div>\n            <SubmitForm />\n            </>\n        );\n    }\n}\n\nexport default TriviaContainer;"]},"metadata":{},"sourceType":"module"}